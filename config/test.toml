
[[plugins]]
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'antoinemadec/FixCursorHold.nvim'

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'

[[plugins]]
repo = 'nvim-neotest/neotest'
on_event = 'VimEnter'
depends = [
  'plenary.nvim',
  'FixCursorHold.nvim',
  'nvim-treesitter'
]
lua_source = '''
local options = {
  adapters = {
    require("neotest-rspec"),
    require("neotest-dotnet")({
        dap = { justMyCode = false },
        -- Let the test-discovery know about your custom attributes (otherwise tests will not be picked up)
        -- Note: Only custom attributes for non-parameterized tests should be added here. See the support note about parameterized tests
        custom_attributes = {
        },
        -- Provide any additional "dotnet test" CLI commands here. These will be applied to ALL test runs performed via neotest. These need to be a table of strings, ideally with one key-value pair per item.
        dotnet_additional_args = {
          "--verbosity detailed"
        },
        -- Tell neotest-dotnet to use either solution (requires .sln file) or project (requires .csproj or .fsproj file) as project root
        -- Note: If neovim is opened from the solution root, using the 'project' setting may sometimes find all nested projects, however,
        --       to locate all test projects in the solution more reliably (if a .sln file is present) then 'solution' is better.
        discovery_root = "project" -- Default
        })
  },
}
require("neotest").setup(options)

vim.api.nvim_create_user_command(
  'TestCurrentLine',
  function(opts)
    require('neotest').run.run()
  end,
  {}
)

vim.api.nvim_create_user_command(
  'TestCurrentFile',
  function(opts)
    require('neotest').run.run(vim.fn.expand('%'))
  end,
  {}
)

vim.api.nvim_create_user_command(
  'TestWithDebugCurrentLine',
  function(opts)
    require('neotest').run.run({ strategy = 'dap' })
  end,
  {}
)

vim.api.nvim_create_user_command(
  'TestWithDebugCurrentFile',
  function(opts)
    require('neotest').run.run({ vim.fn.expand('%'), strategy = 'dap' })
  end,
  {}
)
'''

[[plugins]]
repo = 'Issafalcon/neotest-dotnet'
on_source = 'neotest'

[[plugins]]
repo = 'olimorris/neotest-rspec'
on_source = 'neotest'
